configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // args "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

task jacocoTestReport(type: JacocoReport,
        dependsOn: ['testDebugUnitTest',
                    'createDebugCoverageReport',
                    'jacocoTestCoverageVerification']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [ '**/R.class', '**/R$*.class', '**/BuildConfig.*',
                       '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*',
                       '/br/com/concrete/tentacle/data/**',
                       '/br/com/concrete/tentacle/di/GlideModule',
                       '/br/com/concrete/tentacle/extensions/**',
                       '/br/com/concrete/tentacle/base/',
                       '/br/com/concrete/tentacle/custom/**']

    def debugTree =
            fileTree(
                    dir: "$project.buildDir/tmp/kotlin-classes/debug",
                    excludes: fileFilter)
    classDirectories = files([debugTree])

    def mainSrc = "$project.projectDir/src/main/java"
    sourceDirectories = files([mainSrc])

    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

task jacocoTestCoverageVerification(type: JacocoCoverageVerification) {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug",
                    excludes: [
                            '/br/com/concrete/tentacle/data/**',
                            '/br/com/concrete/tentacle/di/GlideModule',
                            '/br/com/concrete/tentacle/extensions/**',
                            '/br/com/concrete/tentacle/base/',
                            '/br/com/concrete/tentacle/custom/**'
                    ])
        })
    }
}